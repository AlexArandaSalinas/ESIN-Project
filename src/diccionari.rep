
  struct Node {
    string paraula;
    Node* esquerre;
    Node* mig;
    Node* dret;

    Node(const string& p) : paraula(p), esquerre(nullptr), mig(nullptr), dret(nullptr) {}
  };
  
  Node* root;
  void clear(Node* node);
  Node* copy(Node* node) const;
  void llegeix(Node* node) const;
  void prefix_aux(Node* node, const string& p, string& prefix_mes_llarg, string prefix_actual) const;
  nat num_pal_aux(Node* node) const throw();
  void llista_paraules_aux(Node* node, nat k, list<string>& L) const ;
  void satisfan_patro_aux(Node* node, const vector<string>& q, list<string>& L, string paraula_actual) const ;
